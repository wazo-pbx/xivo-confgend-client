#!/usr/bin/python3
# Copyright 2016 by Avencall
# SPDX-License-Identifier: GPL-3.0+

import argparse
import configparser
import socket
import sys

BUFSIZE = 16384
DEFAULT_CONFIG_FILE = '/etc/xivo-confgend-client/config.conf'
DEFAULT_HOST = '127.0.0.1'
DEFAULT_PORT = 8669
DEFAULT_TIMEOUT = 5


def main():
    parsed_args = _parse_args()
    config = _read_config_file(parsed_args.config_file)

    _get_from_confgend(parsed_args.filename, sys.stdout.buffer, config)


def _parse_args():
    arg_parser = argparse.ArgumentParser()
    arg_parser.add_argument('-c', '--config-file', default=DEFAULT_CONFIG_FILE)
    arg_parser.add_argument('filename', metavar='frontend/conffile')
    return arg_parser.parse_args()


def _read_config_file(filename):
    cfg_parser = configparser.ConfigParser()
    cfg_parser.read(filename)
    return {
        'host': cfg_parser.get('confgen', 'server', fallback=DEFAULT_HOST),
        'port': cfg_parser.getint('confgen', 'port', fallback=DEFAULT_PORT),
        'timeout': cfg_parser.getint('confgen', 'timeout', fallback=DEFAULT_TIMEOUT),
    }


def _get_from_confgend(filename, out, config):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        s.settimeout(config['timeout'])
        s.connect((config['host'], config['port']))
        s.send(filename.encode('utf-8'))
        while True:
            data = s.recv(BUFSIZE)
            if not data:
                break
            out.write(data)
    finally:
        s.close()


main()
